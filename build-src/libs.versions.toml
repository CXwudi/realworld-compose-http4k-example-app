# Include me in settings.gradle.kts :)
# 
# dependencyResolutionManagement {
#   versionCatalogs {
#     create("libs") {
#       from(files("path/to/libs.versions.toml"))
#     }
#   }
# }
# 
[versions]
kotlin = "2.2.20"
ksp = "2.2.20-2.0.3"
java = "21"
agp = "8.13.0" # ! if using Android plugin in IDEA, need to switch to a version that IDEA supports
android-compileSdk = "36"
android-targetSdk = "36" # setting targetSdk on per with compileSdk has great benefits, such as layout inspector
android-minSdk = "26"
compose = "1.9.0"
compose-adaptive = "1.0.1"
coil = "3.3.0"
multiplatform-markdown-renderer = "0.38.1"

essenty = "2.5.0"
decompose = "3.4.0"
mvikotlin = "4.3.0"
koin = "4.1.1"
kstore = "1.0.0"
ktor = "3.3.1"
ktorfit = "2.6.4"

junit = "6.0.1"
http4k = "6.20.1.0"
exposed = "0.61.0"

[libraries]
# dev dep
# multiplatform
dev-serializationJson = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"
dev-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.7.1"
dev-kotlinLogging = "io.github.oshai:kotlin-logging:7.0.13"
dev-coroutinesBom = "org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.10.2"
dev-koinBom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }

# frontend
dev-frontend-essentyLifecycleCoroutines = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "essenty" }
dev-frontend-decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
dev-frontend-decomposeCompose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
dev-frontend-decomposeComposeExperimental = { module = "com.arkivanov.decompose:extensions-compose-experimental", version.ref = "decompose" }
dev-frontend-mvikotlin = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvikotlin" }
dev-frontend-mvikotlinMain = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvikotlin" }
dev-frontend-mvikotlinCoroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mvikotlin" }
dev-frontend-mvikotlinLogging = { module = "com.arkivanov.mvikotlin:mvikotlin-logging", version.ref = "mvikotlin" }
dev-frontend-kotlinWrapper = "org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom:2025.9.10"

dev-frontend-compose-adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "compose-adaptive" }
dev-frontend-compose-adaptiveLayout = { module = "org.jetbrains.compose.material3.adaptive:adaptive-layout", version.ref = "compose-adaptive" }
dev-frontend-compose-adaptiveNavigation = { module = "org.jetbrains.compose.material3.adaptive:adaptive-navigation", version.ref = "compose-adaptive" }
dev-frontend-compose-materialIconsCore = "org.jetbrains.compose.material:material-icons-core:1.7.3" # required since compose 1.8.0
dev-frontend-coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
dev-frontend-coil-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
dev-frontend-coil-cacheControl = { module = "io.coil-kt.coil3:coil-network-cache-control", version.ref = "coil" }
dev-frontend-coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil" }
dev-frontend-markdownRenderer = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "multiplatform-markdown-renderer" }
dev-frontend-markdownRenderer-m3 = { module = "com.mikepenz:multiplatform-markdown-renderer-m3", version.ref = "multiplatform-markdown-renderer" }
dev-frontend-markdownRenderer-coil3 = { module = "com.mikepenz:multiplatform-markdown-renderer-coil3", version.ref = "multiplatform-markdown-renderer" }
dev-frontend-markdownRenderer-code = { module = "com.mikepenz:multiplatform-markdown-renderer-code", version.ref = "multiplatform-markdown-renderer" }

dev-frontend-slf4jAndroid = "uk.uuid.slf4j:slf4j-android:2.0.17-0" # can't make kotlin-logging's android native log works for debug level, slf4j-android still works the best

dev-frontend-ktorBom = { module = "io.ktor:ktor-bom", version.ref = "ktor" }
dev-frontend-ktorfitLibLight = { module = "de.jensklingenberg.ktorfit:ktorfit-lib-light", version.ref = "ktorfit" }
dev-frontend-ktorfitConverter = { module = "de.jensklingenberg.ktorfit:ktorfit-converters-response", version.ref = "ktorfit" }
dev-frontend-kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
dev-frontend-kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
dev-frontend-kstore-storage = { module = "io.github.xxfast:kstore-storage", version.ref = "kstore" }
dev-frontend-kotlinxBrowser = "org.jetbrains.kotlinx:kotlinx-browser:0.5.0" # see https://kotlinlang.org/docs/wasm-js-interop.html#web-related-browser-apis

# android
dev-frontend-androidx-coreKtx = "androidx.core:core-ktx:1.17.0"
dev-frontend-androidx-appcompat = "androidx.appcompat:appcompat:1.7.1"
dev-frontend-androidx-lifecycleKtx = "androidx.lifecycle:lifecycle-runtime-ktx:2.9.4"
dev-frontend-androidx-activityCompose = "androidx.activity:activity-compose:1.11.0"

# backend
dev-backend-http4kBom = { module = "org.http4k:http4k-bom", version.ref = "http4k" }
dev-backend-exposedBom = { module = "org.jetbrains.exposed:exposed-bom", version.ref = "exposed" }
dev-backend-junitBom = { module = "org.junit:junit-bom", version.ref = "junit" }
dev-backend-mockk = "io.mockk:mockk:1.14.6"
dev-backend-hoplite-yaml = "com.sksamuel.hoplite:hoplite-yaml:2.9.0"
dev-backend-postgresql = "org.postgresql:postgresql:42.7.8"
dev-backend-hikari = "com.zaxxer:HikariCP:7.0.2"
dev-backend-logback = "ch.qos.logback:logback-classic:1.5.20"
dev-backend-slf4j = "org.slf4j:slf4j-api:2.0.17"
dev-backend-jwt = "com.auth0:java-jwt:4.5.0"

# plugin dep
pluginDep-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
pluginDep-kotlinCompose = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
pluginDep-android = { module = "com.android.tools.build:gradle", version.ref = "agp" }
pluginDep-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }
pluginDep-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
pluginDep-mokkery = "dev.mokkery:mokkery-gradle:3.0.0-Beta3"

# setting plugin dep
settingDep-develocity = "com.gradle.develocity:com.gradle.develocity.gradle.plugin:4.2.2"
settingDep-foojayResolver = "org.gradle.toolchains:foojay-resolver:1.0.0"

[plugins]
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinCompose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }
# a plugin used by gradle files for precompiled script plugin
buildConfig = { id = "com.github.gmazzo.buildconfig", version = "5.7.1" }
